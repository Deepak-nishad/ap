{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raman\\\\Desktop\\\\javascript2.0\\\\Practics Work\\\\react_self_try\\\\context-api\\\\src\\\\provider.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PackageContext from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Provider = props => {\n  _s();\n  const [mission, setMission] = useState({\n    mname: \"Go to Russia\",\n    agent: 200,\n    accept: \"Not Accepted\"\n  });\n  return /*#__PURE__*/_jsxDEV(PackageContext.Provider, {\n    value: {\n      data: mission,\n      isMissionAccepted: () => {\n        setMission({\n          ...mission,\n          accept: \"Accepted\"\n        });\n        console.log(mission);\n      }\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Provider, \"SOeJVE2V3XAheLbWB6YY6Ab8w0g=\");\n_c = Provider;\nexport default Provider;\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","useState","PackageContext","jsxDEV","_jsxDEV","Provider","props","_s","mission","setMission","mname","agent","accept","value","data","isMissionAccepted","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/raman/Desktop/javascript2.0/Practics Work/react_self_try/context-api/src/provider.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport PackageContext from \"./context\";\r\n\r\nconst Provider = (props) => {\r\n  const [mission, setMission] = useState({\r\n    mname: \"Go to Russia\",\r\n    agent: 200,\r\n    accept: \"Not Accepted\",\r\n  });\r\n\r\n  return (\r\n    <PackageContext.Provider\r\n      value={{\r\n        data: mission,\r\n        isMissionAccepted: () => {\r\n          setMission({ ...mission, accept: \"Accepted\" });\r\n          console.log(mission);\r\n        },\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PackageContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Provider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,cAAc,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC;IACrCS,KAAK,EAAE,cAAc;IACrBC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,oBACER,OAAA,CAACF,cAAc,CAACG,QAAQ;IACtBQ,KAAK,EAAE;MACLC,IAAI,EAAEN,OAAO;MACbO,iBAAiB,EAAEA,CAAA,KAAM;QACvBN,UAAU,CAAC;UAAE,GAAGD,OAAO;UAAEI,MAAM,EAAE;QAAW,CAAC,CAAC;QAC9CI,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;MACtB;IACF,CAAE;IAAAU,QAAA,EAEDZ,KAAK,CAACY;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE9B,CAAC;AAACf,EAAA,CApBIF,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AAsBd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}